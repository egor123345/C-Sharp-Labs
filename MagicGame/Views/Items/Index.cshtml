@model PaginatedList<MagicGame.Models.Item>

@{
    ViewData["Title"] = "Items";
}

<h1 align="center">Items</h1>

<p align="center">
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Health)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Regeneration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Armor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Damage)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Health)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Regeneration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Armor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Damage)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-default @nextDisabled">
        Next
    </a>
